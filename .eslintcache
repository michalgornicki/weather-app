[{"D:\\react\\weather-app\\src\\index.js":"1","D:\\react\\weather-app\\src\\App.js":"2","D:\\react\\weather-app\\src\\reportWebVitals.js":"3","D:\\react\\weather-app\\src\\app_component\\weather.component.js":"4","D:\\react\\weather-app\\src\\app_component\\form.component.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":7635,"mtime":1620999610431,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1929,"mtime":1619083971230,"results":"10","hashOfConfig":"7"},{"size":1100,"mtime":1619083383745,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18npdui",{"filePath":"15","messages":"16","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\react\\weather-app\\src\\index.js",[],["25","26"],"D:\\react\\weather-app\\src\\App.js",["27"],"import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./app_component/weather.component\";\nimport Form from \"./app_component/form.component\";\nconst API_key = ;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      visibility: undefined,\n      wind: undefined,\n      error: false,\n      background: undefined,\n      celsius_tomorrow: undefined,\n      wind_tomorrow: undefined,\n      description_tomorrow: undefined,\n      celsius_aftertomorrow: undefined,\n      wind_aftertomorrow: undefined,\n      description_aftertomorrow: undefined,\n      celsius_afteraftertomorrow: undefined,\n      wind_afteraftertomorrow: undefined,\n      description_afteraftertomorrow: undefined,\n      tomorrow: undefined,\n      aftertomorrow: undefined,\n      afteraftertomorrow: undefined,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n\n    this.weatherBackground = {\n      Thunderstorm: \"Thunderstorm\",\n      Drizzle: \"Drizzle\",\n      Rain: \"Rain\",\n      Snow: \"Snow\",\n      Atmosphere: \"Atmosphere\",\n      Clear: `${\"Clear\"}${Math.floor(Math.random() * 3) + 1}`,\n      fewClouds: \"fewClouds\",\n      moderateClouds: \"moderateClouds\",\n      heavyClouds: \"heavyClouds\",\n      overcastClouds: \"overcastClouds\",\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15) + \"\\u00B0\";\n    return cell;\n  }\n\n  calWind(windSpeed) {\n    let power = \"wind: \" + windSpeed.toFixed(1) + \" km/h\";\n    return power;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm,\n          background: this.weatherBackground.Thunderstorm,\n        });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle,\n          background: this.weatherBackground.Drizzle,\n        });\n        break;\n      case rangeId >= 500 && rangeId <= 531:\n        this.setState({\n          icon: this.weatherIcon.Rain,\n          background: this.weatherBackground.Rain,\n        });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow,\n          background: this.weatherBackground.Snow,\n        });\n        break;\n      case rangeId >= 700 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere,\n          background: this.weatherBackground.Atmosphere,\n        });\n        break;\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear,\n          background: this.weatherBackground.Clear,\n        });\n        break;\n      case rangeId === 801:\n        this.setState({\n          icon: this.weatherIcon.Clouds,\n          background: this.weatherBackground.fewClouds,\n        });\n        break;\n      case rangeId === 802:\n        this.setState({\n          icon: this.weatherIcon.Clouds,\n          background: this.weatherBackground.moderateClouds,\n        });\n        break;\n      case rangeId === 803:\n        this.setState({\n          icon: this.weatherIcon.Clouds,\n          background: this.weatherBackground.heavyClouds,\n        });\n        break;\n      case rangeId === 804:\n        this.setState({\n          icon: this.weatherIcon.Clouds,\n          background: this.weatherBackground.overcastClouds,\n        });\n        break;\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clouds,\n          background: this.weatherBackground.Clouds,\n        });\n    }\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${API_key}`\n    );\n\n    const response = await api_call.json();\n\n    var days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n    var date = new Date();\n    var plusOneDay = days[date.getDay() + 1 < 7 ? date.getDay() + 1 : 1];\n    var plusTwoDays = days[date.getDay() + 2 < 7 ? date.getDay() + 2 : 2];\n    var plusThreeDays = days[date.getDay() + 3 < 7 ? date.getDay() + 3 : 3];\n\n    if (response.city) {\n      this.setState({\n        city: `${response.city.name}`,\n        celsius: this.calCelsius(response.list[0].main.temp),\n        description: response.list[0].weather[0].description,\n        visibility: \"visibility: \" + response.list[0].visibility + \" meters\",\n        wind: this.calWind(response.list[0].wind.speed),\n        celsius_tomorrow: this.calCelsius(response.list[8].main.temp),\n        wind_tomorrow: this.calWind(response.list[8].wind.speed),\n        description_tomorrow: response.list[8].weather[0].description,\n        celsius_aftertomorrow: this.calCelsius(response.list[16].main.temp),\n        wind_aftertomorrow: this.calWind(response.list[16].wind.speed),\n        description_aftertomorrow: response.list[16].weather[0].description,\n        celsius_afteraftertomorrow: this.calCelsius(\n          response.list[24].main.temp\n        ),\n        wind_afteraftertomorrow: this.calWind(response.list[24].wind.speed),\n        description_afteraftertomorrow:\n          response.list[24].weather[0].description,\n        tomorrow: plusOneDay,\n        aftertomorrow: plusTwoDays,\n        afteraftertomorrow: plusThreeDays,\n        error: false,\n      });\n\n      this.get_WeatherIcon(this.weatherIcon, response.list[0].weather[0].id);\n      document.getElementsByClassName(\"flex-row\")[0].style.visibility =\n        \"visible\";\n      document.getElementsByClassName(\"weather-icon\")[0].style.visibility =\n        \"visible\";\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className={`App ${this.state.background}`}>\n        <div className=\"wrap-app\">\n          <Form loadweather={this.getWeather} error={this.state.error} />\n          <Weather\n            city={this.state.city}\n            country={this.state.country}\n            temp_celsius={this.state.celsius}\n            wind={this.state.wind}\n            visibility={this.state.visibility}\n            description={this.state.description}\n            weatherIcon={this.state.icon}\n            temp_celsius_tomorrow={this.state.celsius_tomorrow}\n            wind_tomorrow={this.state.wind_tomorrow}\n            description_tomorrow={this.state.description_tomorrow}\n            temp_celsius_aftertomorrow={this.state.celsius_aftertomorrow}\n            wind_aftertomorrow={this.state.wind_aftertomorrow}\n            description_aftertomorrow={this.state.description_aftertomorrow}\n            temp_celsius_afteraftertomorrow={\n              this.state.celsius_afteraftertomorrow\n            }\n            wind_afteraftertomorrow={this.state.wind_afteraftertomorrow}\n            description_afteraftertomorrow={\n              this.state.description_afteraftertomorrow\n            }\n            tomorrow={this.state.tomorrow}\n            aftertomorrow={this.state.aftertomorrow}\n            afteraftertomorrow={this.state.afteraftertomorrow}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","D:\\react\\weather-app\\src\\reportWebVitals.js",[],"D:\\react\\weather-app\\src\\app_component\\weather.component.js",[],["28","29"],"D:\\react\\weather-app\\src\\app_component\\form.component.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":null,"fatal":true,"severity":2,"message":"34","line":7,"column":17},{"ruleId":"30","replacedBy":"35"},{"ruleId":"32","replacedBy":"36"},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  5 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mWeather\u001b[39m from \u001b[32m\"./app_component/weather.component\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mForm\u001b[39m from \u001b[32m\"./app_component/form.component\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mAPI_key\u001b[39m \u001b[33m=\u001b[39m \u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 | \u001b[39m\u001b[36mclass\u001b[39m \u001b[33mApp\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mComponent\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m  constructor() {\u001b[0m",["37"],["38"],"no-global-assign","no-unsafe-negation"]